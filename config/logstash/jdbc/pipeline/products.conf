input {
    jdbc {
        jdbc_connection_string => "${JDBC_DB_CONNECTION}"
        jdbc_user => "${JDBC_DB_USER}"
        jdbc_password => "${JDBC_DB_PASSWORD}"
        jdbc_driver_library => "${JDBC_DRIVER_PATH}"
        jdbc_driver_class => "org.postgresql.Driver"

        # Попытки подключения к базе данных
        connection_retry_attempts => "3"
        # Определить, доступно ли соединение с базой данных, по умолчанию false не включено
        jdbc_validate_connection => "true"
        # Доступно соединение с базой данных, время проверки по умолчанию 3600S
        jdbc_validation_timeout => "3600"

        jdbc_default_timezone => "UTC"

        # Включить пейджинговый запрос, по умолчанию ложь не включена
        jdbc_paging_enabled => "true"
        # Количество одностраничных запросов (по умолчанию 100000, если полей больше и частота обновления выше, рекомендуется уменьшить это значение)
        jdbc_page_size => "1000"
        # SQL-оператор запроса, если SQL-оператор сложен, вы можете указать путь к файлу, в котором SQL-оператор хранится в поле Statement_filepath.
        statement_filepath => "${JDBC_PRODUCTS_QUERY_PATH}"
        # Следует ли преобразовывать имя поля в нижний регистр, по умолчанию установлено значение true (если существуют требования к сериализации и десериализации данных, рекомендуется изменить на false);
        lowercase_column_names => false
        # Установить уровень журнала запросов SQL
        sql_log_level => "warn"
        # Независимо от того, записывать ли последний результат выполнения, true означает, что значение поля tracking_column последнего результата выполнения будет сохранено в файл, указанный в last_run_metadata_path;
        record_last_run => true
        # Когда вам нужно записать значение поля в результате запроса, это поле имеет значение true, в противном случае значение tracking_column по умолчанию - это значение timestamp;
        use_column_value => true
        # Поля для записи, используемые для инкрементной синхронизации, должны быть полями базы данных
        tracking_column => "updatedAt"
        # Тип поля отслеживания записи, формат метки времени ModifyTime, числовой тип - целое число
        tracking_column_type => "timestamp"
        # record_last_run где хранятся последние данные;
        last_run_metadata_path => "${JDBC_CONFIG_PATH}/.jdbc_last_run"
        # Очистить ли запись last_run_metadata_path, это поле должно быть ложным, когда требуется добавочная синхронизация;
        clean_run => false
        # Частота синхронизации (разделение времени, месяца, года), синхронизация по умолчанию - каждая минута;
        schedule => "/5 * * * * *"
    }  
}
filter {
    json { source => "categories" target => "categories" }
    json { source => "brand" target => "brand" }
    json { source => "condition" target => "condition" }
    json { source => "variants" target => "variants" }
    json { source => "colors" target => "colors" }
    json { source => "user" target => "user" }
    json { source => "city" target => "city" }
    json { source => "images" target => "images" }
    mutate {
        remove_field => [ "@timestamp", "@version"]
    }
}
output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "${ELASTICSEARCH_PRODUCT_INDEX}"
        action => "update"
        doc_as_upsert => true
        document_id => "%{[id]}"

        # Установите отношение сопоставления дляasticsearc, template_name указывает, что template является путем к файлу конфигурации сопоставления
		template_name => "${ELASTICSEARCH_PRODUCT_INDEX}"
		template_overwrite => true
		template => "${JDBC_PRODUCTS_TEMPLATE_PATH}"
        manage_template => true
    }
}